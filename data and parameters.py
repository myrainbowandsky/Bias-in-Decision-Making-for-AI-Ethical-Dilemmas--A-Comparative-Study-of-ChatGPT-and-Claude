import numpy as np

# GPT's intersectional data
data1 = np.array([
    [0, 0, 0, 9, 4.75, 22.75, 26.75, 4.5, 0, 1.25, 8.75, 0, 7.25, 0.5, 9.75, 34.75, 0, 0, 18.75, 22.25],
    [0, 0, 0, 3, 0.75, 6.75, 3.75, 6, 1.5, 0, 36.5, 0, 17.5, 1.75, 7.5, 12, 0.5, 0, 1.25, 2],
    [0, 0, 0, 0, 0, 0.75, 0.5, 0.25, 5.75, 0, 2.5, 0, 0.5, 0, 1.5, 1.25, 0, 0.25, 3, 0.75],
    [9, 3, 0, 0, 0, 0, 33.75, 1, 0.25, 16, 0.75, 0, 13.25, 0.25, 0, 44.75, 0.25, 0, 32.75, 3.25],
    [4.75, 0.75, 0, 0, 0, 0, 0.75, 3.25, 0.75, 9.5, 13.25, 0, 5.75, 0.5, 1, 3.25, 0, 0, 5.25, 3],
    [22.75, 6.75, 0.75, 0, 0, 0, 5, 2.75, 1.25, 0.5, 1.75, 0, 0.25, 0, 0.25, 0.25, 0.5, 0, 0.5, 2.5],
    [26.75, 3.75, 0.5, 33.75, 0.75, 5, 0, 0, 0, 2, 3, 0, 29, 1, 2.25, 46.25, 0.75, 0, 6.25, 1.5],
    [4.5, 6, 0.25, 1, 3.25, 2.75, 0, 0, 0, 1.75, 15.25, 0, 2, 7.25, 0.25, 1.75, 0.25, 0, 2.75, 14],
    [0, 1.5, 5.75, 0.25, 0.75, 1.25, 0, 0, 0, 2.25, 24.25, 0, 0.5, 1, 0.25, 0, 0, 0, 11.5, 13],
    [1.25, 0, 0, 16, 9.5, 0.5, 2, 1.75, 2.25, 0, 0, 0, 11.25, 4.75, 5.25, 2, 0.25, 0, 7.75, 9.25],
    [8.75, 36.5, 2.5, 0.75, 13.25, 1.75, 3, 15.25, 24.25, 0, 0, 0, 2, 15.25, 1.75, 41.75, 3, 0, 1.5, 0.25],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14.25, 0],
    [7.25, 17.5, 0.5, 13.25, 5.75, 0.25, 29, 2, 0.5, 11.25, 2, 0, 0, 0, 0, 8.25, 0.25, 0, 16.5, 9],
    [0.5, 1.75, 0, 0.25, 0.5, 0, 1, 7.25, 1, 4.75, 15.25, 0, 0, 0, 0, 39.25, 1, 0.25, 0.25, 9.75],
    [9.75, 7.5, 1.5, 0, 1, 0.25, 2.25, 0.25, 0.25, 5.25, 1.75, 0, 0, 0, 0, 0.25, 0, 0, 1.5, 0.25],
    [34.75, 12, 1.25, 44.75, 3.25, 0.25, 46.25, 1.75, 0, 2, 41.75, 0, 8.25, 39.25, 0.25, 0, 0, 0, 0, 30.5],
    [0, 0.5, 0, 0.25, 0, 0.5, 0.75, 0.25, 0, 0.25, 3, 0, 0.25, 1, 0, 0, 0, 0, 0, 2],
    [0, 0, 0.25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.25, 0, 0, 0, 0, 0],
    [18.75, 1.25, 3, 32.75, 5.25, 0.5, 6.25, 2.75, 11.5, 7.75, 1.5, 14.25, 16.5, 0.25, 1.5, 0, 0, 0, 0, 0],
    [22.25, 2, 0.75, 3.25, 3, 2.5, 1.5, 14, 13, 9.25, 0.25, 0, 9, 9.75, 0.25, 30.5, 2, 0, 0, 0]
])

# Claude's intersectional data
data2 = np.array([
    [0, 0, 0, 3.25, 22.75, 2.5, 14.25, 0.75, 0.75, 12.25, 3.75, 1, 26.25, 0.5, 1.25, 5.5, 1.5, 0.5, 19.25, 19],
    [0, 0, 0, 3, 11.5, 10.75, 8.75, 4.25, 0.75, 2.5, 23.25, 0.5, 9.75, 3.75, 0.5, 37.25, 2.5, 0, 0.75, 0.5],
    [0, 0, 0, 1.25, 1.25, 1.25, 3.5, 0.75, 1.75, 0, 8.75, 0, 0, 0, 0, 1.25, 0, 0, 8.75, 0],
    [3.25, 3, 1.25, 0, 0, 0, 0, 0, 0, 0.5, 0, 0, 0.75, 0, 0, 0, 0, 0, 0.25, 0.25],
    [22.75, 11.5, 1.25, 0, 0, 0, 28.75, 0.75, 0, 28.75, 8, 0, 31.25, 5, 0.75, 15.75, 0.25, 0, 14.25, 3.25],
    [2.5, 10.75, 1.25, 0, 0, 0, 19.75, 0.5, 0, 11.25, 0, 0, 10.5, 0, 0, 31.5, 1, 0, 27.5, 0.25],
    [14.25, 8.75, 3.5, 0, 28.75, 19.75, 0, 0, 0, 0.25, 0, 0, 22.75, 3.75, 0.25, 47.25, 0.5, 0, 24.75, 2.5],
    [0.75, 4.25, 0.75, 0, 0.75, 0.5, 0, 0, 0, 0.25, 16.75, 0.5, 8.75, 1.5, 0, 0.5, 0.25, 0, 0, 1.25],
    [0.75, 0.75, 1.75, 0, 0, 0, 0, 0, 0, 14.75, 15.5, 0.5, 8.25, 1.75, 1, 0, 0, 0, 1, 19],
    [12.25, 2.5, 0, 0.5, 28.75, 11.25, 0.25, 0.25, 14.75, 0, 0, 0, 0.75, 24.75, 2.5, 4.25, 0, 0, 10, 5.5],
    [3.75, 0.25, 8.75, 0, 8, 0, 0, 16.75, 15.5, 0, 0, 0, 0, 17, 0, 23, 10.5, 0, 1.25, 25.75],
    [1, 0.5, 0, 0, 0, 0, 0, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0.5, 0, 0, 0.25, 0.25],
    [26.25, 9.75, 0, 0.75, 31.25, 10.5, 22.75, 8.75, 8.25, 0.75, 0, 0, 0, 0, 0, 0.5, 0, 0, 2.5, 20.5],
    [0.5, 3.75, 0, 0, 5, 0, 3.75, 1.5, 1.75, 24.75, 17, 0, 0, 0, 0, 46, 1.25, 0, 0, 17.5],
    [1.25, 0.5, 0, 0, 0.75, 0, 0.25, 0, 1, 2.5, 0, 0, 0, 0, 0, 0.5, 0, 0, 0.25, 0.5],
    [5.5, 37.25, 1.25, 0, 15.75, 31.5, 47.25, 0.5, 0, 4.25, 23, 0.5, 0.5, 46, 0.5, 0, 0, 0, 28.5, 19.25],
    [1.5, 2.5, 0, 0, 0.25, 1, 0.5, 0.25, 0, 0, 10.5, 0, 0, 1.25, 0, 0, 0, 0, 0, 0],
    [0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [19.25, 0.75, 8.75, 0.25, 14.25, 27.5, 24.75, 0, 1, 10, 1.25, 0.25, 2.5, 0, 0.25, 28.5, 0, 0, 0, 0],
    [19, 0.5, 0, 0.25, 3.25, 0.25, 2.5, 1.25, 19, 5.5, 25.75, 0.25, 20.5, 17.5, 0.5, 19.25, 0, 0, 0, 0]
])

# GPT's intersectional standard deviation
data_std1 = np.array([
    [0, 0, 0, 0.063, 0.023, 0.094, 0.057, 0.06, 0, 0.044, 0.03, 0, 0.08, 0.019, 0.09, 0.047, 0, 0, 0.065, 0.06],
    [0, 0, 0, 0.026, 0.017, 0.037, 0.039, 0.038, 0.018, 0, 0.01, 0, 0.019, 0.042, 0.054, 0.032, 0.018, 0, 0.023, 0.029],
    [0, 0, 0, 0, 0, 0.017, 0.01, 0.009, 0.039, 0, 0.023, 0, 0.011, 0, 0.024, 0.009, 0, 0.009, 0.021, 0.009],
    [0.063, 0.026, 0, 0, 0, 0, 0.039, 0.015, 0.009, 0.088, 0.02, 0, 0.07, 0.02, 0, 0.017, 0.009, 0, 0.077, 0.027],
    [0.023, 0.017, 0, 0, 0, 0, 0.027, 0.017, 0.009, 0.043, 0.078, 0, 0.039, 0.041, 0.033, 0.022, 0, 0, 0.038, 0.015],
    [0.094, 0.037, 0.017, 0, 0, 0, 0.029, 0.039, 0.009, 0.012, 0.031, 0, 0.02, 0, 0.02, 0.009, 0.01, 0, 0.018, 0.032],
    [0.057, 0.039, 0.01, 0.039, 0.027, 0.029, 0, 0, 0, 0.025, 0.015, 0, 0.028, 0, 0.034, 0.030, 0.009, 0, 0.039, 0.031],
    [0.06, 0.038, 0.009, 0.015, 0.017, 0.039, 0, 0, 0, 0.009, 0.066, 0, 0.028, 0.066, 0.01, 0.022, 0.009, 0, 0.017, 0.061],
    [0, 0.018, 0.039, 0.009, 0.009, 0.009, 0, 0, 0, 0.017, 0.045, 0, 0.02, 0.023, 0.01, 0, 0, 0, 0.044, 0.043],
    [0.044, 0, 0, 0.088, 0.043, 0.012, 0.025, 0.009, 0.017, 0, 0, 0, 0.027, 0.051, 0.011, 0.015, 0.009, 0, 0.062, 0.026],
    [0.03, 0.01, 0.023, 0.02, 0.078, 0.031, 0.015, 0.066, 0.045, 0, 0, 0, 0.018, 0.098, 0.021, 0.028, 0.026, 0, 0.166, 0.078],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0, 0, 0.013, 0],
    [0.08, 0.019, 0.011, 0.07, 0.039, 0.02, 0.028, 0.028, 0.02, 0.027, 0.018, 0, 0, 0, 0, 0.039, 0.009, 0, 0.062, 0.05],
    [0.019, 0.042, 0, 0.02, 0.041, 0, 0, 0.066, 0.023, 0.051, 0.098, 0, 0, 0, 0, 0.046, 0.014, 0.009, 0.012, 0.072],
    [0.09, 0.054, 0.024, 0, 0.033, 0.02, 0.034, 0.01, 0.01, 0.011, 0.021, 0, 0, 0, 0, 0.009, 0, 0, 0.030, 0.012],
    [0.047, 0.032, 0.009, 0.017, 0.022, 0.009, 0.030, 0.022, 0, 0.015, 0.028, 0.5, 0.039, 0.046, 0.009, 0, 0, 0, 0, 0.447],
    [0, 0.018, 0, 0.009, 0, 0.01, 0.009, 0.009, 0, 0.009, 0.026, 0, 0.009, 0.014, 0, 0, 0, 0, 0, 0.049],
    [0, 0, 0.009, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, .009, 0, 0,0, 0, 0, 0],
    [0.065, 0.023, 0.021, 0.077, 0.038, 0.018, 0.039, 0.017, 0.044, 0.062, 0.166, 0.013, 0.062, 0.012, 0.030, 0, 0, 0, 0, 0],
    [0.06, 0.029, 0.009, 0.027,0.015, 0.032, 0.031, 0.061, 0.043, 0.026, 0.078, 0, 0.05, 0.072, 0.012, 0.447, 0.049, 0, 0, 0]
])

# Claude's intersectional standard deviation
data_std2 = np.array([
    [0, 0, 0, 0.026, 0.074, 0.019, 0.076, 0.008, 0.008, 0.016, 0.016, 0.019, 0.064, 0.012, 0.02, 0.023, 0.018, 0.018, 0.037, 0.047],
    [0, 0, 0, 0.033, 0.051, 0.069, 0.029, 0.049, 0.016, 0.044, 0.034, 0.01, 0.066, 0.02, 0.012, 0.027, 0.01, 0, 0.017, 0.01],
    [0, 0, 0, 0.008, 0.008, 0.008, 0.049, 0.016, 0.098, 0, 0.037, 0, 0, 0, 0, 0.017, 0, 0, 0.052, 0],
    [0.026, 0.033, 0.008, 0, 0, 0, 0, 0, 0, 0.01, 0, 0, 0.009, 0, 0, 0, 0, 0, 0.009, 0.009],
    [0.074, 0.051, 0.008, 0, 0, 0, 0.08, 0.009, 0, 0.037, 0.015, 0, 0.027, 0.025, 0.017, 0.037, 0.009, 0, 0.139, 0.018],
    [0.019, 0.069, 0.008, 0, 0, 0, 0.074, 0.01, 0, 0.017, 0, 0, 0.073, 0, 0, 0.045, 0.015, 0, 0.153, 0.009],
    [0.076, 0.029, 0.049, 0, 0.08, 0.074, 0, 0, 0, 0.009, 0, 0, 0.052, 0.023, 0.009, 0.030, 0.018, 0, 0.009, 0.031],
    [0.008, 0.049, 0.016, 0, 0.009, 0.01, 0, 0, 0, 0.009, 0.037, 0.01, 0.031, 0.031, 0, 0.018, 0.009, 0, 0, 0.017],
    [0.008, 0.016, 0.098, 0, 0, 0, 0, 0, 0, 0.022, 0.043, 0.01, 0.122, 0.009, 0.026, 0, 0, 0, 0.015, 0.029],
    [0.016, 0.044, 0, 0.01, 0.037, 0.017, 0.009, 0.009, 0.022, 0, 0, 0, 0.010, 0.067, 0.011, 0.05, 0, 0, 0.072, 0.048],
    [0.016, 0.034, 0.037, 0, 0.015, 0, 0, 0.037, 0.043, 0, 0, 0, 0, 0.065, 0, 0.032, 0.029, 0, 0.01, 0.010],
    [0.019, 0.01, 0, 0, 0, 0, 0, 0.01, 0.01, 0, 0, 0, 0, 0,0, 0.013, 0, 0, 0.01, 0.01],
    [0.064, 0.066, 0, 0.009, 0.027, 0.073, 0.052, 0.031, 0.122, 0.010, 0, 0, 0, 0, 0, 0.01, 0, 0, 0.021, 0.056],
    [0.012, 0.02, 0, 0, 0.025, 0, 0.023, 0.031, 0.009, 0.067, 0.065, 0, 0, 0, 0, 0.025, 0.023, 0, 0, 0.021],
    [0.02, 0.012, 0, 0, 0.017, 0, 0.009, 0, 0.026, 0.011, 0, 0, 0, 0, 0, 0.01, 0, 0, 0.010, 0.012],
    [0.023, 0.027, 0.017, 0, 0.037, 0.045, 0.030, 0.018, 0, 0.05, 0.032, 0.013, 0.01, 0.025, 0.01, 0, 0, 0, 0.031, 0.009],
    [0.018, 0.01, 0, 0, 0.009, 0.015, 0.018, 0.009, 0, 0, 0.029, 0, 0, 0.023, 0, 0, 0, 0, 0, 0],
    [0.018, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0.037, 0.017, 0.052, 0.009, 0.139, 0.153, 0.009, 0, 0.015, 0.072, 0.01, 0.01, 0.021, 0, 0.010, 0.031, 0, 0, 0, 0],
    [0.047, 0.01, 0, 0.009, 0.018, 0.009, 0.031, 0.017, 0.029, 0.048, 0.010, 0.01, 0.056, 0.021, 0.012, 0.009, 0, 0, 0, 0]
]
)

# Protected attributes
x_labels = [
    "8", "35", "70",
    "Masculine", "Feminine", "Androgynous",
    "Modest", "Stylish", "Luxury",
    "Black", "White", "Yellow",
    "Asian", "Caucasian", "African",
    "Good-looking", "Standard-looking", "Unpleasant-looking",
    "Disabled", "Non-disabled"
]

# Protected attribute categories
categories_x = ['Age', 'Gender', 'Dressing', 'Color', 'Race', 'Look', 'Disability']

# Define categories with their corresponding indexes
category_dict = {
    'Age': [0, 1, 2],
    'Gender': [3, 4, 5],
    'Dressing': [6, 7, 8],
    'Color': [9, 10, 11],
    'Race': [12, 13, 14],
    'Look': [15, 16,17],
    'Disability': [18, 19]
}

# Standard normalization factor
theta = np.array([17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,18,18])

# GPT's single data
num1 = [1.25, 1, 47.25, 0, 23, 25.5, 23, 25.75, 0, 8.25, 8.75, 4.75, 12.5, 2.75, 1.75, 48.5, 0.75, 0, 40.25, 1.25]

# Claude's single data
num2 = [16.25, 2, 30.75, 14.75, 12.25, 15.75, 41.5, 7.5, 0, 2, 2.75, 6.5, 5.75, 0.75, 0.75, 23,23.75,3.25, 0, 49]

# GPT's single standard deviation
num1_std = np.array([0.022, 0.02, 0.017, 0, 0.108, 0.104, 0.065, 0.062, 0, 0.119, 0.154, 0.068, 0.051, 0.087, 0.025, 0.023, 0.017, 0, 0.251, 0.026])

# Claude's single standard deviation
num2_std = np.array([0.03, 0.029, 0.046, 0.132, 0.035, 0.129, 0.096, 0.096, 0 , 0.154, 0.074, 0.231, 0.15, 0.06, 0.06, 0.177, 0.132, 0.09, 0, 0])
